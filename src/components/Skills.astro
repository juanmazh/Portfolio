---
import skillsData from '../data/skills.json';
---

<section id="habilidades" class="section-padding bg-white">
	<div class="container-custom">
		<div class="text-center mb-16">
			<h2 class="text-4xl font-bold text-gray-900 mb-4">Habilidades</h2>
			<p class="text-xl text-gray-600 max-w-3xl mx-auto">
				Un conjunto diverso de habilidades técnicas y blandas que me permiten crear soluciones completas y efectivas.
			</p>
		</div>

		<div class="grid lg:grid-cols-2 gap-16">
			<!-- Habilidades Técnicas -->
			<div class="space-y-8">
				<h3 class="text-2xl font-semibold text-gray-900 mb-6">Habilidades Técnicas</h3>
				
				{skillsData.technical.map((category) => (
					<div class="space-y-4">
						<h4 class="text-lg font-medium text-gray-800">{category.name}</h4>
						<div class="space-y-4">
							{category.skills.map((skill) => (
								<div class="space-y-2">
									<div class="flex justify-between items-center">
										<span class="text-gray-700 font-medium">{skill.name}</span>
										<span class="text-sm text-gray-500">{skill.level}%</span>
									</div>
									<div class="w-full bg-gray-200 rounded-full h-2">
										<div 
											class="bg-gradient-to-r from-blue-500 to-purple-600 h-2 rounded-full transition-all duration-1000 ease-out"
											style={`width: ${skill.level}%`}
										></div>
									</div>
								</div>
							))}
						</div>
					</div>
				))}
			</div>

			<!-- Habilidades Blandas -->
			<div class="space-y-8">
				<h3 class="text-2xl font-semibold text-gray-900 mb-6">Habilidades Blandas</h3>
				
				<div class="grid gap-6">
					{skillsData.soft.map((skill) => (
						<div class="card p-6 hover:shadow-lg transition-shadow duration-300">
							<h4 class="text-lg font-semibold text-gray-900 mb-3">{skill.name}</h4>
							<p class="text-gray-600 leading-relaxed">{skill.description}</p>
						</div>
					))}
				</div>
			</div>
		</div>
	</div>
</section>

<script>
	// Animación de barras de progreso
	const observerOptions = {
		threshold: 0.5,
		rootMargin: '0px 0px -100px 0px'
	};

	const observer = new IntersectionObserver((entries) => {
		entries.forEach(entry => {
			if (entry.isIntersecting) {
				const progressBars = entry.target.querySelectorAll('.bg-gradient-to-r');
				progressBars.forEach(bar => {
					const htmlBar = bar as HTMLElement;
					const width = htmlBar.style.width;
					htmlBar.style.width = '0%';
					setTimeout(() => {
						htmlBar.style.width = width;
					}, 100);
				});
				observer.unobserve(entry.target);
			}
		});
	}, observerOptions);

	// Observar la sección de habilidades
	const skillsSection = document.getElementById('habilidades');
	if (skillsSection) {
		observer.observe(skillsSection);
	}
</script>
