---
import contactData from '../data/contact.json';

const socialIcons = {
	"github": "M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z",
	"linkedin": "M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
};
---

<section id="contacto" class="section-padding bg-white">
	<div class="container-custom">
		<div class="text-center mb-16">
			<h2 class="text-4xl font-bold text-gray-900 mb-4">Contacto</h2>
			<p class="text-xl text-gray-600 max-w-3xl mx-auto">
				¿Tienes un proyecto en mente? ¿Te gustaría trabajar juntos? No dudes en contactarme.
			</p>
		</div>

		<div class="grid lg:grid-cols-2 gap-16">
			<!-- Información de contacto -->
			<div class="space-y-8">
				<h3 class="text-2xl font-semibold text-gray-900 mb-6">Información de Contacto</h3>
				
				<div class="space-y-6">
					{contactData.info.map((info) => (
						<div class="flex items-center space-x-4">
							<div class="flex-shrink-0 w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
								{info.title.toLowerCase().includes('email') || info.title.toLowerCase().includes('correo') ? (
									<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
									</svg>
								) : info.title.toLowerCase().includes('ubicación') || info.title.toLowerCase().includes('location') ? (
									<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
									</svg>
								) : info.title.toLowerCase().includes('empresa') || info.title.toLowerCase().includes('company') ? (
									<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
									</svg>
								) : (
									<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
									</svg>
								)}
							</div>
							<div>
								<h4 class="text-lg font-semibold text-gray-900">{info.title}</h4>
								<a href={info.link} class="text-gray-600 hover:text-blue-600 transition-colors duration-200">
									{info.value}
								</a>
							</div>
						</div>
					))}
				</div>

				<!-- Redes sociales -->
				<div class="pt-8 border-t border-gray-200">
					<h4 class="text-lg font-semibold text-gray-900 mb-4">Sígueme en redes sociales</h4>
					<div class="flex space-x-4">
						{contactData.social.map((social) => (
							<a
								href={social.url}
								target="_blank"
								rel="noopener noreferrer"
								class="w-12 h-12 bg-gray-100 hover:bg-blue-100 rounded-lg flex items-center justify-center transition-colors duration-200 group"
							>
								<svg class="w-6 h-6 text-gray-600 group-hover:text-blue-600" fill="currentColor" viewBox="0 0 24 24">
									<path d={social.name.toLowerCase() === 'github' ? socialIcons.github : socialIcons.linkedin}></path>
								</svg>
							</a>
						))}
					</div>
				</div>

				<!-- Disponibilidad -->
				<div class="pt-8 border-t border-gray-200">
					<div class="bg-gradient-to-r from-green-50 to-blue-50 p-6 rounded-xl">
						<h4 class="text-lg font-semibold text-gray-900 mb-2">Disponibilidad</h4>
						<p class="text-gray-600 mb-4">
							{contactData.availability.message}
						</p>
						<div class="flex items-center space-x-2">
							<div class="w-3 h-3 bg-green-500 rounded-full animate-pulse"></div>
							<span class="text-sm font-medium text-green-700">{contactData.availability.status}</span>
						</div>
					</div>
				</div>
			</div>

			<!-- Formulario de contacto -->
			<div class="space-y-8">
				<h3 class="text-2xl font-semibold text-gray-900 mb-6">Envíame un mensaje</h3>
				
				<form class="space-y-6" id="contactForm">
					<div class="grid md:grid-cols-2 gap-6">
						<div>
							<label for="name" class="block text-sm font-medium text-gray-700 mb-2">Nombre</label>
							<input
								type="text"
								id="name"
								name="name"
								required
								class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors duration-200"
								placeholder="Tu nombre completo"
							/>
						</div>
						<div>
							<label for="email" class="block text-sm font-medium text-gray-700 mb-2">Email</label>
							<input
								type="email"
								id="email"
								name="email"
								required
								class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors duration-200"
								placeholder="tu@email.com"
							/>
						</div>
					</div>
					
					<div>
						<label for="subject" class="block text-sm font-medium text-gray-700 mb-2">Asunto</label>
						<input
							type="text"
							id="subject"
							name="subject"
							required
							class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors duration-200"
							placeholder="¿En qué puedo ayudarte?"
						/>
					</div>
					
					<div>
						<label for="message" class="block text-sm font-medium text-gray-700 mb-2">Mensaje</label>
						<textarea
							id="message"
							name="message"
							rows="6"
							required
							class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors duration-200 resize-none"
							placeholder="Cuéntame más sobre tu proyecto..."
						></textarea>
					</div>
					
					<button
						type="submit"
						class="w-full btn-primary text-lg py-4"
					>
						Enviar Mensaje
					</button>
				</form>
			</div>
		</div>
	</div>
</section>

<script>
	// Manejo del formulario de contacto
	const contactForm = document.getElementById('contactForm') as HTMLFormElement;
	
	if (contactForm) {
		contactForm.addEventListener('submit', async (e) => {
			e.preventDefault();
			
			const formData = new FormData(contactForm);
			const submitButton = contactForm.querySelector('button[type="submit"]') as HTMLButtonElement;
			
			// Cambiar estado del botón
			submitButton.disabled = true;
			submitButton.textContent = 'Enviando...';
			
			try {
				// Simular envío (aquí iría la lógica real de envío)
				await new Promise(resolve => setTimeout(resolve, 2000));
				
				// Mostrar mensaje de éxito
				alert('¡Mensaje enviado con éxito! Te responderé pronto.');
				contactForm.reset();
				
			} catch (error) {
				alert('Error al enviar el mensaje. Por favor, inténtalo de nuevo.');
			} finally {
				// Restaurar estado del botón
				submitButton.disabled = false;
				submitButton.textContent = 'Enviar Mensaje';
			}
		});
	}
</script>
